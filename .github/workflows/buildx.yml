name: buildx

on: [push, pull_request]

jobs:
  armv7-build:
    runs-on: ubuntu-latest
    name: Build on ubuntu-16.04 armv7
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        with:
          arch: armv7
          distro: ubuntu16.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"

          install: |
            apt-get update -q -y
            apt-get install -q -y build-essential cmake pkg-config libgtk-3-dev \
                libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
                libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
                gfortran openexr libatlas-base-dev python3-dev python3-numpy \
                libtbb2 libtbb-dev libdc1394-22-dev \
                zlib1g zlib1g-dev libffi-dev openssl libssl-dev \
                wget git curl ninja-build zip unzip

            # build python
            cd
            wget -q https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tgz
            tar xvf Python-3.6.5.tgz
            cd Python-3.6.5
            ./configure --enable-shared --with-ssl
            make -j4
            make install
            cp libpython3.6m.so.1.0 /usr/lib/
            python3 -m pip install --upgrade pip
            python3 -V
            pip3 -V

          run: |
            uname -a

            cd
            mkdir opencv_build && cd opencv_build
            git clone https://github.com/opencv/opencv.git
            cd opencv
            git checkout 4.6.0
            cd -

            git clone https://github.com/opencv/opencv_contrib.git
            cd opencv
            git checkout 4.6.0
            cd -
            cd opencv
            mkdir build && cd build

            cmake -D CMAKE_BUILD_TYPE=RELEASE \
                -D CMAKE_INSTALL_PREFIX=/usr/local \
                -D INSTALL_C_EXAMPLES=ON \
                -D INSTALL_PYTHON_EXAMPLES=ON \
                -D OPENCV_GENERATE_PKGCONFIG=ON \
                -D OPENCV_EXTRA_MODULES_PATH=~/opencv_build/opencv_contrib/modules \
                -D BUILD_EXAMPLES=ON ..

            make -j4
            make install

            pkg-config --modversion opencv4

            ls -la .

            cp -r /usr/local/lib/python3.6/site-packages /artifacts/site-packages

      - name: Show the artifact
        # Items placed in /artifacts in the container will be in
        # ${PWD}/artifacts on the host.
        run: |
          ls -la "${PWD}/artifacts"

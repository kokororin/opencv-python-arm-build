name: buildx

on: [push, pull_request]

jobs:
  armv7-build:
    runs-on: ubuntu-latest
    name: Build on ubuntu-16.04 armv7
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        with:
          arch: armv7
          distro: ubuntu16.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"

          install: |
            apt-get update -q -y
            apt-get install -q -y zlib1g zlib1g-dev libffi-dev openssl libssl-dev wget build-essential git curl ninja-build zip unzip software-properties-common
            add-apt-repository -y ppa:deadsnakes/ppa
            apt-get update
            apt-get install python3.6
            
            python3 -m pip install --upgrade pip
            python3 -V
            pip3 -V

          run: |
            uname -a

            # pip3 install cmake --progress-bar off
            # pip3 install opencv-python-headless

            # pip3 install cmake

            # build opencv-python
            # git clone --recursive https://github.com/opencv/opencv-python.git
            # cd opencv-python
            # export ENABLE_CONTRIB=0
            # pip wheel . --verbose

            # ls -la .

            # cp -r /usr/local/lib/python3.6/site-packages /artifacts/site-packages

      - name: Show the artifact
        # Items placed in /artifacts in the container will be in
        # ${PWD}/artifacts on the host.
        run: |
          ls -la "${PWD}/artifacts"
